# Portainer with SSL Certificate in a Docker Swarm

# Author
# hey, Iâ€™m Vladimir Mikhalev, but my friends call me Valdemar.

# My website with detailed IT guides: https://www.heyvaldemar.com/
# Follow me on YouTube: https://www.youtube.com/channel/UCf85kQ0u1sYTTTyKVpxrlyQ?sub_confirmation=1
# Follow me on Twitter: https://twitter.com/heyValdemar
# Follow me on Instagram: https://www.instagram.com/heyvaldemar/
# Follow me on Facebook: https://www.facebook.com/heyValdemarFB/
# Follow me on TikTok: https://www.tiktok.com/@heyvaldemar
# Follow me on [LinkedIn](https://www.linkedin.com/in/heyvaldemar/)
# Follow me on [GitHub](https://github.com/heyvaldemar)

# Communication
# Chat with IT pros on Discord: https://discord.com/invite/D7fGMYjdR9
# Chat with IT pros on Telegram: https://t.me/heyValdemarCOMchat
# Reach me at ask@sre.gg

# Give Thanks
# Support on GitHub: https://github.com/sponsors/heyValdemar
# Support on Patreon: https://www.patreon.com/heyValdemar
# Support on BuyMeaCoffee: https://www.buymeacoffee.com/heyValdemar
# Support on Ko-fi: https://ko-fi.com/heyValdemar
# Support on PayPal: https://www.paypal.com/paypalme/heyValdemarCOM

# Install Docker Swarm by following my guide: https://www.heyvaldemar.com/install-docker-swarm-on-ubuntu-server/

# Configure Traefik before applying the configuration.
# Traefik configuration: https://github.com/heyValdemar/traefik-ssl-certificate-docker-swarm

# Deploy Portainer in a Docker Swarm using the command:
# docker stack deploy -c portainer-traefik-ssl-certificate-docker-swarm.yml portainer

version: '3.8'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "10m"

networks:
  portainer-network:
    driver: overlay
    attachable: true
  traefik-network:
    external: true

volumes:
  portainer-data:

services:
  agent:
    <<: *default-opts
    # Image tag (replace with yours)
    image: portainer/agent:2.14.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux
      update_config:
        delay: 15s
        parallelism: 1
        monitor: 10s
        failure_action: rollback
        max_failure_ratio: 0.55
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.35'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M

  portainer:
    <<: *default-opts
    # Image tag (replace with yours)
    image: portainer/portainer-ce:2.14.2
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "8000:8000"
    volumes:
      - portainer-data:/data
    networks:
      - portainer-network
      - traefik-network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        delay: 15s
        parallelism: 1
        monitor: 10s
        failure_action: rollback
        max_failure_ratio: 0.55
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.35'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M
      labels:
        - "traefik.enable=true"
        # Portainer URL (replace with yours)
        - "traefik.http.routers.portainer.rule=Host(`portainer.heyvaldemar.net`)"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.services.portainer.loadbalancer.passhostheader=true"
        - "traefik.http.routers.portainer.middlewares=compresstraefik"
        - "traefik.http.middlewares.compresstraefik.compress=true"
